import { Request, Response } from "express";
import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

class LoansController {
  async listofLoans(req: Request, res: Response): Promise<void> {
    try {
      const loans = await prisma.crm_loans.findMany({
        take: 500,
        orderBy: {
          amount_applied: "asc",
        },
      });
      console.log("Fetch success", loans);
      res.status(200).json(loans);
    } catch (err) {
      console.error("Error retrieving loans:", err);
      res.status(500).json({ error: "Internal Server Error" });
    }
  }

  async createloans(req: Request, res: Response): Promise<void> {
    try {
      const {
        directory,
        profile,
        cloud_profile,
        loan_profile,
        mobile_app,
        create_by_cloud,
        file_created,
        leads,
        loan_active,
        branch,
        agent,
        app_type,
        pn_number,
        personal_loan,
        prev_approval,
        prev_amount,
        payment_history,
        loan_terms,
        amount_applied,
        amount_recommended,
        amount_approved,
        term_rate,
        interest_rate,
        purpose,
        payment_mode,
        other_income,
        pro_license,
        loan_recommendation,
        loan_final_approval,
        loan_approved_term,
        loan_interest_rate,
        loan_gp,
        scorecard,
        other_text,
        added_score,
        monthly_amort,
        estimated_amort_terms,
        doc_submitted,
        security_support,
        released,
        release_udate,
        owner,
        telemarketer,
        src,
        active_department,
        department_status,
        remarks_crd_require_1,
        remarks_crd_require_2,
        remarks_crd_require_3,
        remarks_crd_require_4,
        remarks_crd_require_5,
        remarks_crd_require_6,
        remarks_crd_confirm_1,
        remarks_crd_confirm_2,
        remarks_crd_confirm_3,
        remarks_crd_confirm_4,
        remarks_crd_confirm_5,
        remarks_crd_confirm_6,
        remarks_crd_confirm_7,
        remarks_crd_confirm_8,
        company_background,
        other_source_name,
        other_source_nature,
        other_source_address,
        other_source_length,
        other_source_ownrented,
        other_source_contract,
        other_source_monthlyincome,
        other_source_of_income,
        collateral_registered_owner,
        collateral_tct,
        collateral_location,
        collateral_locality,
        collateral_land_value,
        collateral_spouse_name,
        collateral_improvements,
        collateral_total_appraised,
        collateral_30_appraised,
        collateral_reference,
        collateral_remarks,
        court_checking,
        bank_checking_branch,
        bank_checking_tel,
        bank_checking_sa,
        bank_checking_remarks,
        residence,
        neighbourhood_checking,
        other_information,
        assets,
        strength,
        weakness,
        crd_remarks,
        crecom_remarks,
        action_ao_name,
        action_ao_mobile,
        action_ao_date,
        action_bm_name,
        action_bm_mobile,
        action_bm_date,
        action_crecom,
        action_crecom_final,
        action_crd,
        assigned_ao,
        waivers_remarks,
        dep_stat,
        com_prod,
        company,
        product,
        raw_product,
        cam,
        soi,
        raw_soi,
        state,
        access_by,
        lock_access,
        lock_head,
        crecom_access,
        excom_access,
        access_tool,
        crd_access,
        udate,
        date,
      } = req.body;
      const newloan = await prisma.crm_loans.create({
        data: {
          directory: directory,
          profile: profile,
          cloud_profile: cloud_profile,
          loan_profile: loan_profile,
          mobile_app: mobile_app,
          create_by_cloud: create_by_cloud,
          file_created: file_created,
          leads: leads,
          loan_active: loan_active,
          branch: branch,
          agent: agent,
          app_type: app_type,
          pn_number: pn_number,
          personal_loan: personal_loan,
          prev_approval: prev_approval,
          prev_amount: prev_amount,
          payment_history: payment_history,
          loan_terms: loan_terms,
          amount_applied: amount_applied,
          amount_recommended: amount_recommended,
          amount_approved: amount_approved,
          term_rate: term_rate,
          interest_rate: interest_rate,
          purpose: purpose,
          payment_mode: payment_mode,
          other_income: other_income,
          pro_license: pro_license,
          loan_recommendation: loan_recommendation,
          loan_final_approval: loan_final_approval,
          loan_approved_term: loan_approved_term,
          loan_interest_rate: loan_interest_rate,
          loan_gp: loan_gp,
          scorecard: scorecard,
          other_text: other_text,
          added_score: added_score,
          monthly_amort: monthly_amort,
          estimated_amort_terms: estimated_amort_terms,
          doc_submitted: doc_submitted,
          security_support: security_support,
          released: released,
          release_udate: release_udate,
          owner: owner,
          telemarketer: telemarketer,
          src: src,
          active_department: active_department,
          department_status: department_status,
          remarks_crd_require_1: remarks_crd_require_1,
          remarks_crd_require_2: remarks_crd_require_2,
          remarks_crd_require_3: remarks_crd_require_3,
          remarks_crd_require_4: remarks_crd_require_4,
          remarks_crd_require_5: remarks_crd_require_5,
          remarks_crd_require_6: remarks_crd_require_6,
          remarks_crd_confirm_1: remarks_crd_confirm_1,
          remarks_crd_confirm_2: remarks_crd_confirm_2,
          remarks_crd_confirm_3: remarks_crd_confirm_3,
          remarks_crd_confirm_4: remarks_crd_confirm_4,
          remarks_crd_confirm_5: remarks_crd_confirm_5,
          remarks_crd_confirm_6: remarks_crd_confirm_6,
          remarks_crd_confirm_7: remarks_crd_confirm_7,
          remarks_crd_confirm_8: remarks_crd_confirm_8,
          company_background: company_background,
          other_source_name: other_source_name,
          other_source_nature: other_source_nature,
          other_source_address: other_source_address,
          other_source_length: other_source_length,
          other_source_ownrented: other_source_ownrented,
          other_source_contract: other_source_contract,
          other_source_monthlyincome: other_source_monthlyincome,
          other_source_of_income: other_source_of_income,
          collateral_registered_owner: collateral_registered_owner,
          collateral_tct: collateral_tct,
          collateral_location: collateral_location,
          collateral_locality: collateral_locality,
          collateral_land_value: collateral_land_value,
          collateral_spouse_name: collateral_spouse_name,
          collateral_improvements: collateral_improvements,
          collateral_total_appraised: collateral_total_appraised,
          collateral_30_appraised: collateral_30_appraised,
          collateral_reference: collateral_reference,
          collateral_remarks: collateral_remarks,
          court_checking: court_checking,
          bank_checking_branch: bank_checking_branch,
          bank_checking_tel: bank_checking_tel,
          bank_checking_sa: bank_checking_sa,
          bank_checking_remarks: bank_checking_remarks,
          residence: residence,
          neighbourhood_checking: neighbourhood_checking,
          other_information: other_information,
          assets: assets,
          strength: strength,
          weakness: weakness,
          crd_remarks: crd_remarks,
          crecom_remarks: crecom_remarks,
          action_ao_name: action_ao_name,
          action_ao_mobile: action_ao_mobile,
          action_ao_date: action_ao_date,
          action_bm_name: action_bm_name,
          action_bm_mobile: action_bm_mobile,
          action_bm_date: action_bm_date,
          action_crecom: action_crecom,
          action_crecom_final: action_crecom_final,
          action_crd: action_crd,
          assigned_ao: assigned_ao,
          waivers_remarks: waivers_remarks,
          dep_stat: dep_stat,
          com_prod: com_prod,
          company: company,
          product: product,
          raw_product: raw_product,
          cam: cam,
          soi: soi,
          raw_soi: raw_soi,
          state: state,
          access_by: access_by,
          lock_access: lock_access,
          lock_head: lock_head,
          crecom_access: crecom_access,
          excom_access: excom_access,
          access_tool: access_tool,
          crd_access: crd_access,
          udate: udate,
          date: date ? new Date(date) : undefined,
        },
      });
      console.log("Fetch success", newloan);
      res.status(200).json(newloan);
    } catch (err) {
      console.error("Error retrieving loans:", err);
      res.status(500).json({ error: "Internal Server Error" });
    }
  }
}

export default new LoansController();
